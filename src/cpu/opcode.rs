use super::instructions::Instruction;

pub const fn decode_op(op: u8) -> Instruction {
    OPCODES[op as usize]
}

const OPCODES: [Instruction; 0x100] = [
    /*0X00*/ Instruction::BRK,
    /*0X01*/ Instruction::ORA,
    /*0X02*/ Instruction::KIL,
    /*0X03*/ Instruction::SLO,
    /*0X04*/ Instruction::NOP,
    /*0X05*/ Instruction::ORA,
    /*0X06*/ Instruction::ASL,
    /*0X07*/ Instruction::SLO,
    /*0X08*/ Instruction::PHP,
    /*0X09*/ Instruction::ORA,
    /*0X0A*/ Instruction::ASL,
    /*0X0B*/ Instruction::ANC,
    /*0X0C*/ Instruction::NOP,
    /*0X0D*/ Instruction::ORA,
    /*0X0E*/ Instruction::ASL,
    /*0X0F*/ Instruction::SLO,
    /*0X10*/ Instruction::BPL,
    /*0X11*/ Instruction::ORA,
    /*0X12*/ Instruction::KIL,
    /*0X13*/ Instruction::SLO,
    /*0X14*/ Instruction::NOP,
    /*0X15*/ Instruction::ORA,
    /*0X16*/ Instruction::ASL,
    /*0X17*/ Instruction::SLO,
    /*0X18*/ Instruction::CLC,
    /*0X19*/ Instruction::ORA,
    /*0X1A*/ Instruction::NOP,
    /*0X1B*/ Instruction::SLO,
    /*0X1C*/ Instruction::NOP,
    /*0X1D*/ Instruction::ORA,
    /*0X1E*/ Instruction::ASL,
    /*0X1F*/ Instruction::SLO,
    /*0X20*/ Instruction::JSR,
    /*0X21*/ Instruction::AND,
    /*0X22*/ Instruction::KIL,
    /*0X23*/ Instruction::RLA,
    /*0X24*/ Instruction::BIT,
    /*0X25*/ Instruction::AND,
    /*0X26*/ Instruction::ROL,
    /*0X27*/ Instruction::RLA,
    /*0X28*/ Instruction::PLP,
    /*0X29*/ Instruction::AND,
    /*0X2A*/ Instruction::ROL,
    /*0X2B*/ Instruction::ANC,
    /*0X2C*/ Instruction::BIT,
    /*0X2D*/ Instruction::AND,
    /*0X2E*/ Instruction::ROL,
    /*0X2F*/ Instruction::RLA,
    /*0X30*/ Instruction::BMI,
    /*0X31*/ Instruction::AND,
    /*0X32*/ Instruction::KIL,
    /*0X33*/ Instruction::RLA,
    /*0X34*/ Instruction::NOP,
    /*0X35*/ Instruction::AND,
    /*0X36*/ Instruction::ROL,
    /*0X37*/ Instruction::RLA,
    /*0X38*/ Instruction::SEC,
    /*0X39*/ Instruction::AND,
    /*0X3A*/ Instruction::NOP,
    /*0X3B*/ Instruction::RLA,
    /*0X3C*/ Instruction::NOP,
    /*0X3D*/ Instruction::AND,
    /*0X3E*/ Instruction::ROL,
    /*0X3F*/ Instruction::RLA,
    /*0X40*/ Instruction::RTI,
    /*0X41*/ Instruction::EOR,
    /*0X42*/ Instruction::KIL,
    /*0X43*/ Instruction::SRE,
    /*0X44*/ Instruction::NOP,
    /*0X45*/ Instruction::EOR,
    /*0X46*/ Instruction::LSR,
    /*0X47*/ Instruction::SRE,
    /*0X48*/ Instruction::PHA,
    /*0X49*/ Instruction::EOR,
    /*0X4A*/ Instruction::LSR,
    /*0X4B*/ Instruction::ALR,
    /*0X4C*/ Instruction::JMP,
    /*0X4D*/ Instruction::EOR,
    /*0X4E*/ Instruction::LSR,
    /*0X4F*/ Instruction::SRE,
    /*0X50*/ Instruction::BVC,
    /*0X51*/ Instruction::EOR,
    /*0X52*/ Instruction::KIL,
    /*0X53*/ Instruction::SRE,
    /*0X54*/ Instruction::NOP,
    /*0X55*/ Instruction::EOR,
    /*0X56*/ Instruction::LSR,
    /*0X57*/ Instruction::SRE,
    /*0X58*/ Instruction::CLI,
    /*0X59*/ Instruction::EOR,
    /*0X5A*/ Instruction::NOP,
    /*0X5B*/ Instruction::SRE,
    /*0X5C*/ Instruction::NOP,
    /*0X5D*/ Instruction::EOR,
    /*0X5E*/ Instruction::LSR,
    /*0X5F*/ Instruction::SRE,
    /*0X60*/ Instruction::RTS,
    /*0X61*/ Instruction::ADC,
    /*0X62*/ Instruction::KIL,
    /*0X63*/ Instruction::RRA,
    /*0X64*/ Instruction::NOP,
    /*0X65*/ Instruction::ADC,
    /*0X66*/ Instruction::ROR,
    /*0X67*/ Instruction::RRA,
    /*0X68*/ Instruction::PLA,
    /*0X69*/ Instruction::ADC,
    /*0X6A*/ Instruction::ROR,
    /*0X6B*/ Instruction::ARR,
    /*0X6C*/ Instruction::JMP,
    /*0X6D*/ Instruction::ADC,
    /*0X6E*/ Instruction::ROR,
    /*0X6F*/ Instruction::RRA,
    /*0X70*/ Instruction::BVS,
    /*0X71*/ Instruction::ADC,
    /*0X72*/ Instruction::KIL,
    /*0X73*/ Instruction::RRA,
    /*0X74*/ Instruction::NOP,
    /*0X75*/ Instruction::ADC,
    /*0X76*/ Instruction::ROR,
    /*0X77*/ Instruction::RRA,
    /*0X78*/ Instruction::SEI,
    /*0X79*/ Instruction::ADC,
    /*0X7A*/ Instruction::NOP,
    /*0X7B*/ Instruction::RRA,
    /*0X7C*/ Instruction::NOP,
    /*0X7D*/ Instruction::ADC,
    /*0X7E*/ Instruction::ROR,
    /*0X7F*/ Instruction::RRA,
    /*0X80*/ Instruction::NOP,
    /*0X81*/ Instruction::STA,
    /*0X82*/ Instruction::NOP,
    /*0X83*/ Instruction::SAX,
    /*0X84*/ Instruction::STY,
    /*0X85*/ Instruction::STA,
    /*0X86*/ Instruction::STX,
    /*0X87*/ Instruction::SAX,
    /*0X88*/ Instruction::DEY,
    /*0X89*/ Instruction::NOP,
    /*0X8A*/ Instruction::TXA,
    /*0X8B*/ Instruction::XAA,
    /*0X8C*/ Instruction::STY,
    /*0X8D*/ Instruction::STA,
    /*0X8E*/ Instruction::STX,
    /*0X8F*/ Instruction::SAX,
    /*0X90*/ Instruction::BCC,
    /*0X91*/ Instruction::STA,
    /*0X92*/ Instruction::KIL,
    /*0X93*/ Instruction::AHX,
    /*0X94*/ Instruction::STY,
    /*0X95*/ Instruction::STA,
    /*0X96*/ Instruction::STX,
    /*0X97*/ Instruction::SAX,
    /*0X98*/ Instruction::TYA,
    /*0X99*/ Instruction::STA,
    /*0X9A*/ Instruction::TXS,
    /*0X9B*/ Instruction::TAS,
    /*0X9C*/ Instruction::SHY,
    /*0X9D*/ Instruction::STA,
    /*0X9E*/ Instruction::SHX,
    /*0X9F*/ Instruction::AHX,
    /*0XA0*/ Instruction::LDY,
    /*0XA1*/ Instruction::LDA,
    /*0XA2*/ Instruction::LDX,
    /*0XA3*/ Instruction::LAX,
    /*0XA4*/ Instruction::LDY,
    /*0XA5*/ Instruction::LDA,
    /*0XA6*/ Instruction::LDX,
    /*0XA7*/ Instruction::LAX,
    /*0XA8*/ Instruction::TAY,
    /*0XA9*/ Instruction::LDA,
    /*0XAA*/ Instruction::TAX,
    /*0XAB*/ Instruction::LAX,
    /*0XAC*/ Instruction::LDY,
    /*0XAD*/ Instruction::LDA,
    /*0XAE*/ Instruction::LDX,
    /*0XAF*/ Instruction::LAX,
    /*0XB0*/ Instruction::BCS,
    /*0XB1*/ Instruction::LDA,
    /*0XB2*/ Instruction::KIL,
    /*0XB3*/ Instruction::LAX,
    /*0XB4*/ Instruction::LDY,
    /*0XB5*/ Instruction::LDA,
    /*0XB6*/ Instruction::LDX,
    /*0XB7*/ Instruction::LAX,
    /*0XB8*/ Instruction::CLV,
    /*0XB9*/ Instruction::LDA,
    /*0XBA*/ Instruction::TSX,
    /*0XBB*/ Instruction::LAS,
    /*0XBC*/ Instruction::LDY,
    /*0XBD*/ Instruction::LDA,
    /*0XBE*/ Instruction::LDX,
    /*0XBF*/ Instruction::LAX,
    /*0XC0*/ Instruction::CPY,
    /*0XC1*/ Instruction::CMP,
    /*0XC2*/ Instruction::NOP,
    /*0XC3*/ Instruction::DCP,
    /*0XC4*/ Instruction::CPY,
    /*0XC5*/ Instruction::CMP,
    /*0XC6*/ Instruction::DEC,
    /*0XC7*/ Instruction::DCP,
    /*0XC8*/ Instruction::INY,
    /*0XC9*/ Instruction::CMP,
    /*0XCA*/ Instruction::DEX,
    /*0XCB*/ Instruction::AXS,
    /*0XCC*/ Instruction::CPY,
    /*0XCD*/ Instruction::CMP,
    /*0XCE*/ Instruction::DEC,
    /*0XCF*/ Instruction::DCP,
    /*0XD0*/ Instruction::BNE,
    /*0XD1*/ Instruction::CMP,
    /*0XD2*/ Instruction::KIL,
    /*0XD3*/ Instruction::DCP,
    /*0XD4*/ Instruction::NOP,
    /*0XD5*/ Instruction::CMP,
    /*0XD6*/ Instruction::DEC,
    /*0XD7*/ Instruction::DCP,
    /*0XD8*/ Instruction::CLD,
    /*0XD9*/ Instruction::CMP,
    /*0XDA*/ Instruction::NOP,
    /*0XDB*/ Instruction::DCP,
    /*0XDC*/ Instruction::NOP,
    /*0XDD*/ Instruction::CMP,
    /*0XDE*/ Instruction::DEC,
    /*0XDF*/ Instruction::DCP,
    /*0XE0*/ Instruction::CPX,
    /*0XE1*/ Instruction::SBC,
    /*0XE2*/ Instruction::NOP,
    /*0XE3*/ Instruction::ISC,
    /*0XE4*/ Instruction::CPX,
    /*0XE5*/ Instruction::SBC,
    /*0XE6*/ Instruction::INC,
    /*0XE7*/ Instruction::ISC,
    /*0XE8*/ Instruction::INX,
    /*0XE9*/ Instruction::SBC,
    /*0XEA*/ Instruction::NOP,
    /*0XEB*/ Instruction::SBC,
    /*0XEC*/ Instruction::CPX,
    /*0XED*/ Instruction::SBC,
    /*0XEE*/ Instruction::INC,
    /*0XEF*/ Instruction::ISC,
    /*0XF0*/ Instruction::BEQ,
    /*0XF1*/ Instruction::SBC,
    /*0XF2*/ Instruction::KIL,
    /*0XF3*/ Instruction::ISC,
    /*0XF4*/ Instruction::NOP,
    /*0XF5*/ Instruction::SBC,
    /*0XF6*/ Instruction::INC,
    /*0XF7*/ Instruction::ISC,
    /*0XF8*/ Instruction::SED,
    /*0XF9*/ Instruction::SBC,
    /*0XFA*/ Instruction::NOP,
    /*0XFB*/ Instruction::ISC,
    /*0XFC*/ Instruction::NOP,
    /*0XFD*/ Instruction::SBC,
    /*0XFE*/ Instruction::INC,
    /*0XFF*/ Instruction::ISC,
];
